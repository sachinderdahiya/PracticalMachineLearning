?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
sample(LETTERS)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbionm
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(c(0,1),size=100,prob=c(,0.7))
rbinom(c(0,1),size=100,prob=c(0,0.7))
rbinom(100,1,prob=0.7)
flips2 <- rbinom(100,1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Systime(),t1,units='days')
difftime(Sys.time(),t1,units='days')
data(cars)
help()
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(dist ~ speed,cars)
plot(x=cars$dist, y=cars$speed)
plot(dpeed ~ dist,cars)
plot(speed ~ dist,cars)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,col=2,xlim=c(10,15))
plot(cars,xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(x=mtcars,data=mtcars,formula=mpg~cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
remove.packages("AgentEngagementQTR", lib="~/R/win-library/3.1")
remove.packages("AgentEngagementMonthly", lib="~/R/win-library/3.1")
install.packages("C:/STBO Work/Analystics/Packages/updatedpackages/AgentEngagementQTR_2.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/STBO Work/Analystics/Packages/updatedpackages/AgentEngagementMonthly_2.0.tar.gz", repos = NULL, type = "source")
remove.packages("AgentEngagementMonthly", lib="~/R/win-library/3.1")
remove.packages("AgentEngagementQTR", lib="~/R/win-library/3.1")
install.packages("C:/STBO Work/Analystics/Packages/updatedpackages/AgentcohortMonthly_1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/STBO Work/Analystics/Packages/updatedpackages/AgentcohortQuarterly_1.0.tar.gz", repos = NULL, type = "source")
ls()
rm(list=ls())
ls()
q()
install.packages("data.table")
install.packages("quantmod")
library("AgentCancellatioN", lib.loc="~/R/win-library/3.1")
library("AgentCancellationUpdated", lib.loc="~/R/win-library/3.1")
detach("package:AgentCancellatioN", unload=TRUE)
detach("package:AgentCancellationUpdated", unload=TRUE)
remove.packages("AgentCancellatioN", lib="~/R/win-library/3.1")
remove.packages("AgentCancellationUpdated", lib="~/R/win-library/3.1")
remove.packages("AgentCoC", lib="~/R/win-library/3.1")
remove.packages("AgentEngagemenT", lib="~/R/win-library/3.1")
remove.packages("AgentEOC", lib="~/R/win-library/3.1")
remove.packages("AgentEOCRecurringUpdated", lib="~/R/win-library/3.1")
remove.packages("AgentEOCUpdated", lib="~/R/win-library/3.1")
remove.packages("AgentMargin", lib="~/R/win-library/3.1")
remove.packages("AgentMarginUpdated", lib="~/R/win-library/3.1")
remove.packages("AgentRegularity", lib="~/R/win-library/3.1")
remove.packages("AgentRegularityUpdated", lib="~/R/win-library/3.1")
remove.packages("AgentSegmentationUpdated", lib="~/R/win-library/3.1")
remove.packages("APB", lib="~/R/win-library/3.1")
remove.packages("APBUpdated", lib="~/R/win-library/3.1")
remove.packages("MarginRecur", lib="~/R/win-library/3.1")
remove.packages("RecurringEOC", lib="~/R/win-library/3.1")
remove.packages("SegmentationAgent", lib="~/R/win-library/3.1")
remove.packages("SegmentationAgentRecur", lib="~/R/win-library/3.1")
remove.packages("SegmentationRecurringUpdated", lib="~/R/win-library/3.1")
q()
library(lattice)
library(ggplot2)
install.packages("ggplot2")
q()
library(graphics)
library(grdevices))
library(grdevices)
install.packages("grDevices")
install.packages("grDevices")
q()
install.packages("grDevices")
library(datasets)
q()
source("Plot4.R")
source("Plot3.R")
source("Plot3.R")
source("Plot3.R")
source("Plot3.R")
source("Plot2.R")
source("Plot1.R")
?par
?quartz
q()
library("AgentSegmentationReformed", lib.loc="~/R/win-library/3.1")
install.packages("RODBC")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Diet)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
q()
install.packages("plyr")
library("dplyr", lib.loc="~/R/win-library/3.1")
detach("package:dplyr", unload=TRUE)
library("tidyr", lib.loc="~/R/win-library/3.1")
detach("package:tidyr", unload=TRUE)
library(plyr)
library(dplyr)
NEI <- readRDS("summarySCC_PM25.rds")
NEI<-tbl_df(NEI)
GraphData <- group_by(NEI, year) %>% summarise(sum(Emissions))
colnames(GraphData)=c("Year", "Total_Emissions")
GraphData
plot(GraphData$Year, GraphData$Total_Emissions,type="l", xlim=c(1998, 2009), ylim=c(3000000, 7500000),type="n",main="Annual PM2.5 Emission in US", xlab="Year", ylab="Total Emissions")
plot(GraphData$Year, GraphData$Total_Emissions,type="l", xlim=c(1998, 2009), ylim=c(3000000, 7500000),main="Annual PM2.5 Emission in US", xlab="Year", ylab="Total Emissions")
plot(GraphData$Year, GraphData$Total_Emissions,type="l", xlim=c(1998, 2009), ylim=c(3000000, 7500000),col="blue",main="Annual PM2.5 Emission in US", xlab="Year", ylab="Total Emissions")
plot(GraphData$Year, GraphData$Total_Emissions,type="l", xlim=c(1998, 2009), ylim=c(3000000, 8000000),col="blue",main="Annual PM2.5 Emission in US", xlab="Year", ylab="Total Emissions")
Source("Plot1.R")
source("Plot1.R")
rm(list=ls())
NEI <- readRDS("summarySCC_PM25.rds")
NEI<-tbl_df(NEI)
FilteredData <- subset(NEI, fips=="24510")
head(FilteredData)
GraphData <- group_by(NEI, year) %>% summarise(sum(Emissions))
colnames(GraphData)=c("Year", "Total_Emissions")
GraphData
GraphData <- group_by(FilteredData, year) %>% summarise(sum(Emissions))
colnames(GraphData)=c("Year", "Total_Emissions")
GraphData
plot(GraphData$Year, GraphData$Total_Emissions,type="l", xlim=c(1998, 2009), ylim=c(1000, 4000),col="blue",main="Annual PM2.5 Emission in Baltimore City, Maryland", xlab="Year", ylab="Total Emissions")
source("Plot2.R")
source("Plot2.R")
library(ggplot2)
remove.package("ggplot2")
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
rm(list=ls())
NEI <- readRDS("summarySCC_PM25.rds")
NEI<-tbl_df(NEI)
FilteredData <- subset(NEI, fips=="24510")
GraphData <- group_by(FilteredData,year,type) %>% summarise(sum(Emissions))
colnames(GraphData)=c("Year","Type","Total_Emissions")
GraphData
ggplot(GraphData, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ",
"City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ Type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ",
"City by Source Types", sep="")))
qplot(Year, data=GraphData, geom="Emission", fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom="Total_Emission", fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom="Total_Emissions", fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom=Total_Emissions, fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom=Total_Emissions, fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom="Total_Emissions", fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year, data=GraphData, geom="line", fill=Type, alpha=I(.5),main="Emissions in Baltimore City by Source Types", xlab="Years",ylab="Emission")
qplot(Year,Total_Emissions, data=GraphData, geom="line",main="Emissions in Baltimore City by Source Types",xlim=c(1998,2009),ylim=c(0,2300), xlab="Years",ylab="Emission")
qplot(Year,Total_Emissions, data=GraphData, geom="smooth",main="Emissions in Baltimore City by Source Types",xlim=c(1998,2009),ylim=c(0,2300), xlab="Years",ylab="Emission")
qplot(Year,Total_Emissions, data=GraphData, geom="hist",main="Emissions in Baltimore City by Source Types",xlim=c(1998,2009),ylim=c(0,2300), xlab="Years",ylab="Emission")
qplot(Year,Total_Emissions, data=GraphData, geom="histogram",main="Emissions in Baltimore City by Source Types",xlim=c(1998,2009),ylim=c(0,2300), xlab="Years",ylab="Emission")
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ Type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ",
"City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ Type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ",
"City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)), geom_bar(stat="identity"), facet_grid(. ~ Type) ,xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")), ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ", "City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)), geom_bar(stat="identity"), facet_grid(. ~ Type) ,xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")), ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ", "City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)), geom_bar(stat="identity"), facet_grid(. ~ Type) ,xlab("Year"), ylab(expression("Total PM"[2.5]*" Emission")), ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ", "City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)), geom_bar(stat="identity"), facet_grid(. ~ Type) ,xlab("Year")  ylab(expression("Total PM"[2.5]*" Emission")), ggtitle(expression("PM"[2.5]*paste(" Emissions in Baltimore ", "City by Source Types", sep="")))
ggplot(GraphData, aes(x=factor(Year), y=Total_Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ Type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
labs(title="Total PM2.5 Emissions by Type \n in Baltimore City "
)
source("Plot3.R")
source("Plot3.R")
rm(list=ls())
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- tbl_df(NEI)
SCC <- tbl_df(SCC)
data<-transform(NEI,type=factor(type),year=factor(year))
combustion<-as.data.frame(SCC[grep("combustion",SCC$SCC.Level.One,ignore.case=T) & grep("coal",SCC$SCC.Level.Three,ignore.case=T),1])
CoalData = SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(x=NEI , y=CoalData, by='SCC')
head(merge)
GraphData <- group_by(mergedData,year) %>% summarise(sum(Emissions))
GraphData <- group_by(merge,year) %>% summarise(sum(Emissions))
colnames(GraphData) <- c('Year', 'Emissions')
ggplot(GraphData, aes(Year,Emissions)) +
geom_line(size=2) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ") +
theme(plot.title=element_text(color="brown", size=16, face="bold"))
ggplot(GraphData, aes(Year,Emissions)) +
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")
ggplot(GraphData, aes(Year,Emissions)) +geom_point(aes(size=2, col=Emissions))
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")
ggplot(data=GraphData, aes(x=Year, y=Emissions/1000)) +
geom_line(aes(group=1, col=Emissions)) + geom_point(aes(size=2, col=Emissions)) +
ggtitle(expression('Total Emissions of PM'[2.5]))
ggplot(GraphData, aes(Year,Emissions))
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")+
scale_colour_gradient(low='black', high='red')
ggplot(GraphData, aes(Year,Emissions))
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US "
)
ggplot(GraphData, aes(Year,Emissions)) +
+     geom_line(size=1) +
+      labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")
+ scale_colour_gradient(low='black', high='red')
ggplot(GraphData, aes(Year,Emissions)) +
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")
+ scale_colour_gradient(low='black', high='red')
rm(list=ls())
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- tbl_df(NEI)
SCC <- tbl_df(SCC)
merge <- merge(x=NEI , y=CoalData, by='SCC')
data<-transform(NEI,type=factor(type),year=factor(year))
combustion<-as.data.frame(SCC[grep("combustion",SCC$SCC.Level.One,ignore.case=T) & grep("coal",SCC$SCC.Level.Three,ignore.case=T),1])
names(combustion)<-"SCC"
mergedData<-merge(combustion,data,by="SCC")
rm(list=ls())
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- tbl_df(NEI)
SCC <- tbl_df(SCC)
CoalData = SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(x=NEI , y=CoalData, by='SCC')
GraphData <- group_by(merge ,year) %>% summarise(sum(Emissions))
colnames(GraphData) <- c('Year', 'Emissions')
ggplot(GraphData, aes(Year,Emissions)) +
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Coal Combustion \n in US ")
source("Plot4")
source("Plot4.R")
source("Plot4.R")
SCC <- readRDS("Source_Classification_Code.rds")
SCC <- readRDS("Source_Classification_Code.rds")
vehicles<-as.data.frame(SCC[grep("vehicles",SCC$SCC.Level.Two,ignore.case=T),1])
vehicles
rm(list=ls())
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- tbl_df(NEI)
SCC <- tbl_df(SCC)
SubsetData <- subset(NEI, fips=="24510")
vehicles<-as.data.frame(SCC[grep("vehicles",SCC$SCC.Level.Two,ignore.case=T),1])
names(vehicles)<-"SCC"
FilteredData<-merge(vehicles,SubsetData,by="SCC")
head(FilteredData)
GraphData <- group_by(FilteredData,year) %>% summarise(sum(Emissions))
colnames(GraphData) <- c('Year', 'Emissions')
ggplot(GraphData, aes(Year,Emissions)) +
geom_line(size=1) +
labs(title="Total PM2.5 Emissions from Vehicles in Baltimore ")
Source("Plot5.R")
source("Plot5.R")
source("Plot5.R")
rm(list=ls())
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- tbl_df(NEI)
SCC <- tbl_df(SCC)
SubsetData <- subset(NEI, fips=="24510" | fips=="06037")
vehicles<-as.data.frame(SCC[grep("vehicles",SCC$SCC.Level.Two,ignore.case=T),1])
names(vehicles)<-"SCC"
FilteredData<-merge(vehicles,SubsetData,by="SCC")
GraphData <- group_by(FilteredData,year,fips) %>% summarise(sum(Emissions))
GraphData
GraphData$city[data2$fips=="24510"]<-"Baltimore"
GraphData$city[GraphData$fips=="24510"]<-"Baltimore"
GraphData$city[GraphData$fips=="06037"]<-"LA"
GraphData
colnames(GraphData) <- c('Year','fips' 'Emissions','City')
colnames(GraphData) <- c('Year','fips' 'Emissions','City')
colnames(GraphData) <- c("Year","fips","Emissions","City")
ggplot(GraphData, aes(x=factor(Year), y=Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ City) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
labs(title="Total Emissions by Vehicles \n in Baltimore City vs Los Angeles County ")
ggplot(GraphData, aes(x=factor(Year), y=Emissions, fill=Type)) +
geom_bar(stat="identity") +
facet_grid(. ~ Type) +
xlab("Year") +
ylab(expression("Total PM"[2.5]*" Emission")) +
labs(title="Total Emissions by Vehicles \n in Baltimore City vs Los Angeles County ")
ggplot(data=GraphData, aes(x=Year, y=Emissions)) + geom_bar(aes(fill=Year)) + guides(fill=F) +
ggtitle('Total Emissions of Motor Vehicles Sources\n\nLos Angeles County vs. Baltimore City') +
ylab(expression("Total PM"[2.5]*" Emissions")) + xlab('Year') + theme(legend.position='none') + facet_grid(. ~ City) +
geom_text(aes(label=round(Emissions,0), size=1, hjust=0.5, vjust=-1))
ggplot(GraphData, aes(Year,Emissions)) + geom_line(colour="lightgreen",size=2) + facet_grid(.~City) +
labs(title="Total PM2.5 Emissions from Motor Vehicles \n in Los Angeles County and Baltimore City") +
theme(plot.title=element_text(color="brown", size=16, face="bold"), legend.title=element_text(color="Navy", size=12, face="bold"), axis.title=element_text(color="black", size=14, face="bold"))
ggplot(GraphData, aes(Year,Emissions)) + geom_line(colour="lightgreen",size=2) + facet_grid(.~City) +
labs(title="Total PM2.5 Emissions from Motor Vehicles \n in  Baltimore City and Los Angeles County") +
theme(legend.title=element_text(color="Navy", size=12, face="bold"), axis.title=element_text(color="black", size=14, face="bold"))
ggplot(GraphData, aes(Year,Emissions)) + geom_line(colour="lightgreen",size=2) + facet_grid(.~City) +
labs(title="Total PM2.5 Emissions from Motor Vehicles \n in  Baltimore City and Los Angeles County") +
theme(legend.title=element_text(color="Blue", size=12), axis.title=element_text(color="black", size=14))
ggplot(GraphData, aes(Year,Emissions)) + geom_line(colour="blue",size=2) + facet_grid(.~City) +
labs(title="Total PM2.5 Emissions from Motor Vehicles \n in  Baltimore City and Los Angeles County")
source("Plot6.R")
source("Plot1.R")
source("Plot2.R")
source("Plot3.R")
source("Plot4.R")
source("Plot5.R")
source("Plot6.R")
q()
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
motor_SCC <- SCC[grep("[Mm]otor", SCC$Short.Name),][,c(1,3)]
motor_SCC$Short.Name <- "Motor"
colnames(motor_SCC) <- c("SCC","vehicle")
CA_MD_NEI <- NEI[NEI$fips %in% c("24510","06037"),][,c(1:2,4,6)]
data_merged <- merge(CA_MD_NEI, motor_SCC, by.x = "SCC", by.y = "SCC")
data <- summarise(group_by(data_merged, year, fips, vehicle), "Total_PM2.5" = sum(Emissions))
data[data$fips == "24510",][,2] <- "Baltimore"
data[data$fips == "06037",][,2] <- "Los Angeles"
rm(NEI, SCC, data_merged, motor_SCC, CA_MD_NEI)
png(filename="plottest1.png", width = 480, height = 480, units = "px")
ggplot(data, aes(year, Total_PM2.5, color=fips))+labs(title = "Compare emissions from motor vehicle \n Baltimore City and Los Angeles County")+ylab("Amount of PM2.5 emitted (t)")+xlab("Year")+geom_line()
dev.off()
rm(data)
q()
getwd()
q()
q()
gc()
rm(list=ls())
gc()
gc()
gc()
gc()
gc()
gc()
gc()
gc()
rm(list=ls())
gc()
gc(true)
gc(TRUE)
library(AgentRegularityReformed)
firstTimeSegmentation("D://Sachinder-RWork//db.config","air",1,1,1,'12-04-01','12-04-31')
agentRegularity("C://STBO Work//Analystics//db.config","air",1,1,1,'12-04-01','12-04-31')
agentRegularity("C://STBO Work//Analystics//db.config","air",1,1,1,"12-04-01","12-04-31")
agentRegularity("C://STBO Work//Analystics//db.config","air",1,1,1,"2012-04-01","2012-04-31")
library(AgentRegularityReformed)
agentRegularity("C://STBO Work//Analystics//db.config","air",1,1,1,"2012-04-01","2012-04-31")
q()
library("AgentRegularityReformed", lib.loc="~/R/win-library/3.1")
install.packages("Knitr")
2
install.packages("knitr")
q()
q()
pbeta(2,3,4,5)
pbeta(.75,2,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
q()
install.packages("latex")
install_from_swirl("Regression Models")
library(swirl)
swirl()
install_from_swirl("Regression Models")
q()
installed.packages()
install.packages("AppliedPredictiveModeling")
install.packages("caret")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
install.packages("ElemStatLearn")
install.packages("pgmm")
install.packages("rpart")
library(pgmm)
91 data(olive)
92 olive = olive[,-1]
93 M <- train(Area ~ ., data=olive, method="rpart")
94 newdata = as.data.frame(t(colMeans(olive)))
95 newdata
96 predict(M, newdata)
97 M$finalModel
data(olive)
olive = olive[,-1]
M <- train(Area ~ ., data=olive, method="rpart")
getwd()
install.packages("doParalle")
install.packages("doParallel")
getwd()
install.packages("randomForest")
install.packages('caret', dependencies = TRUE)
library(randomForest)
getwd()
library(caret)
library(parallel)
library(doParallel)
setwd("C:/Users/sachinderk/Documents/PracMachine")
#load raw data
trainingSrc   <- read.csv('pml-training.csv', na.strings=c("NA","#DIV/0!", ""))
testSrc       <- read.csv('pml-test.csv' , na.strings=c("NA", "#DIV/0!", ""))
testSrc       <- read.csv('pml-testing.csv' , na.strings=c("NA", "#DIV/0!", ""))
testSrc       <- read.csv('pml-testing.csv' , na.strings=c("NA", "#DIV/0!", ""))
```
We decided to leave columns having no more than 60% of NA values:
